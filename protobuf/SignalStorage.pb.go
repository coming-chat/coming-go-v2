//*
// Copyright (C) 2019 Open Whisper Systems
//
// Licensed according to the LICENSE file in this repository.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: SignalStorage.proto

package signalservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManifestRecord_Identifier_Type int32

const (
	ManifestRecord_Identifier_UNKNOWN ManifestRecord_Identifier_Type = 0
	ManifestRecord_Identifier_CONTACT ManifestRecord_Identifier_Type = 1
	ManifestRecord_Identifier_GROUPV1 ManifestRecord_Identifier_Type = 2
	ManifestRecord_Identifier_GROUPV2 ManifestRecord_Identifier_Type = 3
	ManifestRecord_Identifier_ACCOUNT ManifestRecord_Identifier_Type = 4
)

// Enum value maps for ManifestRecord_Identifier_Type.
var (
	ManifestRecord_Identifier_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "CONTACT",
		2: "GROUPV1",
		3: "GROUPV2",
		4: "ACCOUNT",
	}
	ManifestRecord_Identifier_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"CONTACT": 1,
		"GROUPV1": 2,
		"GROUPV2": 3,
		"ACCOUNT": 4,
	}
)

func (x ManifestRecord_Identifier_Type) Enum() *ManifestRecord_Identifier_Type {
	p := new(ManifestRecord_Identifier_Type)
	*p = x
	return p
}

func (x ManifestRecord_Identifier_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManifestRecord_Identifier_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_SignalStorage_proto_enumTypes[0].Descriptor()
}

func (ManifestRecord_Identifier_Type) Type() protoreflect.EnumType {
	return &file_SignalStorage_proto_enumTypes[0]
}

func (x ManifestRecord_Identifier_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManifestRecord_Identifier_Type.Descriptor instead.
func (ManifestRecord_Identifier_Type) EnumDescriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{5, 0, 0}
}

type ContactRecord_IdentityState int32

const (
	ContactRecord_DEFAULT    ContactRecord_IdentityState = 0
	ContactRecord_VERIFIED   ContactRecord_IdentityState = 1
	ContactRecord_UNVERIFIED ContactRecord_IdentityState = 2
)

// Enum value maps for ContactRecord_IdentityState.
var (
	ContactRecord_IdentityState_name = map[int32]string{
		0: "DEFAULT",
		1: "VERIFIED",
		2: "UNVERIFIED",
	}
	ContactRecord_IdentityState_value = map[string]int32{
		"DEFAULT":    0,
		"VERIFIED":   1,
		"UNVERIFIED": 2,
	}
)

func (x ContactRecord_IdentityState) Enum() *ContactRecord_IdentityState {
	p := new(ContactRecord_IdentityState)
	*p = x
	return p
}

func (x ContactRecord_IdentityState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactRecord_IdentityState) Descriptor() protoreflect.EnumDescriptor {
	return file_SignalStorage_proto_enumTypes[1].Descriptor()
}

func (ContactRecord_IdentityState) Type() protoreflect.EnumType {
	return &file_SignalStorage_proto_enumTypes[1]
}

func (x ContactRecord_IdentityState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactRecord_IdentityState.Descriptor instead.
func (ContactRecord_IdentityState) EnumDescriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{7, 0}
}

type AccountRecord_PhoneNumberSharingMode int32

const (
	AccountRecord_EVERYBODY     AccountRecord_PhoneNumberSharingMode = 0
	AccountRecord_CONTACTS_ONLY AccountRecord_PhoneNumberSharingMode = 1
	AccountRecord_NOBODY        AccountRecord_PhoneNumberSharingMode = 2
)

// Enum value maps for AccountRecord_PhoneNumberSharingMode.
var (
	AccountRecord_PhoneNumberSharingMode_name = map[int32]string{
		0: "EVERYBODY",
		1: "CONTACTS_ONLY",
		2: "NOBODY",
	}
	AccountRecord_PhoneNumberSharingMode_value = map[string]int32{
		"EVERYBODY":     0,
		"CONTACTS_ONLY": 1,
		"NOBODY":        2,
	}
)

func (x AccountRecord_PhoneNumberSharingMode) Enum() *AccountRecord_PhoneNumberSharingMode {
	p := new(AccountRecord_PhoneNumberSharingMode)
	*p = x
	return p
}

func (x AccountRecord_PhoneNumberSharingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountRecord_PhoneNumberSharingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_SignalStorage_proto_enumTypes[2].Descriptor()
}

func (AccountRecord_PhoneNumberSharingMode) Type() protoreflect.EnumType {
	return &file_SignalStorage_proto_enumTypes[2]
}

func (x AccountRecord_PhoneNumberSharingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountRecord_PhoneNumberSharingMode.Descriptor instead.
func (AccountRecord_PhoneNumberSharingMode) EnumDescriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{11, 0}
}

type StorageManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Value   []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StorageManifest) Reset() {
	*x = StorageManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageManifest) ProtoMessage() {}

func (x *StorageManifest) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageManifest.ProtoReflect.Descriptor instead.
func (*StorageManifest) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{0}
}

func (x *StorageManifest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StorageManifest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type StorageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StorageItem) Reset() {
	*x = StorageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageItem) ProtoMessage() {}

func (x *StorageItem) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageItem.ProtoReflect.Descriptor instead.
func (*StorageItem) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{1}
}

func (x *StorageItem) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *StorageItem) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type StorageItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*StorageItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *StorageItems) Reset() {
	*x = StorageItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageItems) ProtoMessage() {}

func (x *StorageItems) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageItems.ProtoReflect.Descriptor instead.
func (*StorageItems) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{2}
}

func (x *StorageItems) GetItems() []*StorageItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReadOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadKey [][]byte `protobuf:"bytes,1,rep,name=readKey,proto3" json:"readKey,omitempty"`
}

func (x *ReadOperation) Reset() {
	*x = ReadOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOperation) ProtoMessage() {}

func (x *ReadOperation) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOperation.ProtoReflect.Descriptor instead.
func (*ReadOperation) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{3}
}

func (x *ReadOperation) GetReadKey() [][]byte {
	if x != nil {
		return x.ReadKey
	}
	return nil
}

type WriteOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifest   *StorageManifest `protobuf:"bytes,1,opt,name=manifest,proto3" json:"manifest,omitempty"`
	InsertItem []*StorageItem   `protobuf:"bytes,2,rep,name=insertItem,proto3" json:"insertItem,omitempty"`
	DeleteKey  [][]byte         `protobuf:"bytes,3,rep,name=deleteKey,proto3" json:"deleteKey,omitempty"`
	ClearAll   bool             `protobuf:"varint,4,opt,name=clearAll,proto3" json:"clearAll,omitempty"`
}

func (x *WriteOperation) Reset() {
	*x = WriteOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteOperation) ProtoMessage() {}

func (x *WriteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteOperation.ProtoReflect.Descriptor instead.
func (*WriteOperation) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{4}
}

func (x *WriteOperation) GetManifest() *StorageManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *WriteOperation) GetInsertItem() []*StorageItem {
	if x != nil {
		return x.InsertItem
	}
	return nil
}

func (x *WriteOperation) GetDeleteKey() [][]byte {
	if x != nil {
		return x.DeleteKey
	}
	return nil
}

func (x *WriteOperation) GetClearAll() bool {
	if x != nil {
		return x.ClearAll
	}
	return false
}

type ManifestRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     uint64                       `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Identifiers []*ManifestRecord_Identifier `protobuf:"bytes,2,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
}

func (x *ManifestRecord) Reset() {
	*x = ManifestRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManifestRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestRecord) ProtoMessage() {}

func (x *ManifestRecord) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestRecord.ProtoReflect.Descriptor instead.
func (*ManifestRecord) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{5}
}

func (x *ManifestRecord) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ManifestRecord) GetIdentifiers() []*ManifestRecord_Identifier {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type StorageRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Record:
	//
	//	*StorageRecord_Contact
	//	*StorageRecord_GroupV1
	//	*StorageRecord_GroupV2
	//	*StorageRecord_Account
	Record isStorageRecord_Record `protobuf_oneof:"record"`
}

func (x *StorageRecord) Reset() {
	*x = StorageRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageRecord) ProtoMessage() {}

func (x *StorageRecord) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageRecord.ProtoReflect.Descriptor instead.
func (*StorageRecord) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{6}
}

func (m *StorageRecord) GetRecord() isStorageRecord_Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (x *StorageRecord) GetContact() *ContactRecord {
	if x, ok := x.GetRecord().(*StorageRecord_Contact); ok {
		return x.Contact
	}
	return nil
}

func (x *StorageRecord) GetGroupV1() *GroupV1Record {
	if x, ok := x.GetRecord().(*StorageRecord_GroupV1); ok {
		return x.GroupV1
	}
	return nil
}

func (x *StorageRecord) GetGroupV2() *GroupV2Record {
	if x, ok := x.GetRecord().(*StorageRecord_GroupV2); ok {
		return x.GroupV2
	}
	return nil
}

func (x *StorageRecord) GetAccount() *AccountRecord {
	if x, ok := x.GetRecord().(*StorageRecord_Account); ok {
		return x.Account
	}
	return nil
}

type isStorageRecord_Record interface {
	isStorageRecord_Record()
}

type StorageRecord_Contact struct {
	Contact *ContactRecord `protobuf:"bytes,1,opt,name=contact,proto3,oneof"`
}

type StorageRecord_GroupV1 struct {
	GroupV1 *GroupV1Record `protobuf:"bytes,2,opt,name=groupV1,proto3,oneof"`
}

type StorageRecord_GroupV2 struct {
	GroupV2 *GroupV2Record `protobuf:"bytes,3,opt,name=groupV2,proto3,oneof"`
}

type StorageRecord_Account struct {
	Account *AccountRecord `protobuf:"bytes,4,opt,name=account,proto3,oneof"`
}

func (*StorageRecord_Contact) isStorageRecord_Record() {}

func (*StorageRecord_GroupV1) isStorageRecord_Record() {}

func (*StorageRecord_GroupV2) isStorageRecord_Record() {}

func (*StorageRecord_Account) isStorageRecord_Record() {}

type ContactRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceUuid         string                      `protobuf:"bytes,1,opt,name=serviceUuid,proto3" json:"serviceUuid,omitempty"`
	ServiceE164         string                      `protobuf:"bytes,2,opt,name=serviceE164,proto3" json:"serviceE164,omitempty"`
	ProfileKey          []byte                      `protobuf:"bytes,3,opt,name=profileKey,proto3" json:"profileKey,omitempty"`
	IdentityKey         []byte                      `protobuf:"bytes,4,opt,name=identityKey,proto3" json:"identityKey,omitempty"`
	IdentityState       ContactRecord_IdentityState `protobuf:"varint,5,opt,name=identityState,proto3,enum=signalservice.ContactRecord_IdentityState" json:"identityState,omitempty"`
	GivenName           string                      `protobuf:"bytes,6,opt,name=givenName,proto3" json:"givenName,omitempty"`
	FamilyName          string                      `protobuf:"bytes,7,opt,name=familyName,proto3" json:"familyName,omitempty"`
	Username            string                      `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`
	Blocked             bool                        `protobuf:"varint,9,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Whitelisted         bool                        `protobuf:"varint,10,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
	Archived            bool                        `protobuf:"varint,11,opt,name=archived,proto3" json:"archived,omitempty"`
	MarkedUnread        bool                        `protobuf:"varint,12,opt,name=markedUnread,proto3" json:"markedUnread,omitempty"`
	MutedUntilTimestamp uint64                      `protobuf:"varint,13,opt,name=mutedUntilTimestamp,proto3" json:"mutedUntilTimestamp,omitempty"`
}

func (x *ContactRecord) Reset() {
	*x = ContactRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactRecord) ProtoMessage() {}

func (x *ContactRecord) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactRecord.ProtoReflect.Descriptor instead.
func (*ContactRecord) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{7}
}

func (x *ContactRecord) GetServiceUuid() string {
	if x != nil {
		return x.ServiceUuid
	}
	return ""
}

func (x *ContactRecord) GetServiceE164() string {
	if x != nil {
		return x.ServiceE164
	}
	return ""
}

func (x *ContactRecord) GetProfileKey() []byte {
	if x != nil {
		return x.ProfileKey
	}
	return nil
}

func (x *ContactRecord) GetIdentityKey() []byte {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *ContactRecord) GetIdentityState() ContactRecord_IdentityState {
	if x != nil {
		return x.IdentityState
	}
	return ContactRecord_DEFAULT
}

func (x *ContactRecord) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *ContactRecord) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *ContactRecord) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ContactRecord) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *ContactRecord) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

func (x *ContactRecord) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *ContactRecord) GetMarkedUnread() bool {
	if x != nil {
		return x.MarkedUnread
	}
	return false
}

func (x *ContactRecord) GetMutedUntilTimestamp() uint64 {
	if x != nil {
		return x.MutedUntilTimestamp
	}
	return 0
}

type GroupV1Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Blocked             bool   `protobuf:"varint,2,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Whitelisted         bool   `protobuf:"varint,3,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
	Archived            bool   `protobuf:"varint,4,opt,name=archived,proto3" json:"archived,omitempty"`
	MarkedUnread        bool   `protobuf:"varint,5,opt,name=markedUnread,proto3" json:"markedUnread,omitempty"`
	MutedUntilTimestamp uint64 `protobuf:"varint,6,opt,name=mutedUntilTimestamp,proto3" json:"mutedUntilTimestamp,omitempty"`
}

func (x *GroupV1Record) Reset() {
	*x = GroupV1Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupV1Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupV1Record) ProtoMessage() {}

func (x *GroupV1Record) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupV1Record.ProtoReflect.Descriptor instead.
func (*GroupV1Record) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{8}
}

func (x *GroupV1Record) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GroupV1Record) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *GroupV1Record) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

func (x *GroupV1Record) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *GroupV1Record) GetMarkedUnread() bool {
	if x != nil {
		return x.MarkedUnread
	}
	return false
}

func (x *GroupV1Record) GetMutedUntilTimestamp() uint64 {
	if x != nil {
		return x.MutedUntilTimestamp
	}
	return 0
}

type GroupV2Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterKey           []byte `protobuf:"bytes,1,opt,name=masterKey,proto3" json:"masterKey,omitempty"`
	Blocked             bool   `protobuf:"varint,2,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Whitelisted         bool   `protobuf:"varint,3,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
	Archived            bool   `protobuf:"varint,4,opt,name=archived,proto3" json:"archived,omitempty"`
	MarkedUnread        bool   `protobuf:"varint,5,opt,name=markedUnread,proto3" json:"markedUnread,omitempty"`
	MutedUntilTimestamp uint64 `protobuf:"varint,6,opt,name=mutedUntilTimestamp,proto3" json:"mutedUntilTimestamp,omitempty"`
}

func (x *GroupV2Record) Reset() {
	*x = GroupV2Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupV2Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupV2Record) ProtoMessage() {}

func (x *GroupV2Record) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupV2Record.ProtoReflect.Descriptor instead.
func (*GroupV2Record) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{9}
}

func (x *GroupV2Record) GetMasterKey() []byte {
	if x != nil {
		return x.MasterKey
	}
	return nil
}

func (x *GroupV2Record) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *GroupV2Record) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

func (x *GroupV2Record) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *GroupV2Record) GetMarkedUnread() bool {
	if x != nil {
		return x.MarkedUnread
	}
	return false
}

func (x *GroupV2Record) GetMutedUntilTimestamp() uint64 {
	if x != nil {
		return x.MutedUntilTimestamp
	}
	return 0
}

type Payments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Entropy []byte `protobuf:"bytes,2,opt,name=entropy,proto3" json:"entropy,omitempty"`
}

func (x *Payments) Reset() {
	*x = Payments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payments) ProtoMessage() {}

func (x *Payments) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payments.ProtoReflect.Descriptor instead.
func (*Payments) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{10}
}

func (x *Payments) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Payments) GetEntropy() []byte {
	if x != nil {
		return x.Entropy
	}
	return nil
}

type AccountRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileKey             []byte                               `protobuf:"bytes,1,opt,name=profileKey,proto3" json:"profileKey,omitempty"`
	GivenName              string                               `protobuf:"bytes,2,opt,name=givenName,proto3" json:"givenName,omitempty"`
	FamilyName             string                               `protobuf:"bytes,3,opt,name=familyName,proto3" json:"familyName,omitempty"`
	AvatarUrlPath          string                               `protobuf:"bytes,4,opt,name=avatarUrlPath,proto3" json:"avatarUrlPath,omitempty"`
	NoteToSelfArchived     bool                                 `protobuf:"varint,5,opt,name=noteToSelfArchived,proto3" json:"noteToSelfArchived,omitempty"`
	ReadReceipts           bool                                 `protobuf:"varint,6,opt,name=readReceipts,proto3" json:"readReceipts,omitempty"`
	SealedSenderIndicators bool                                 `protobuf:"varint,7,opt,name=sealedSenderIndicators,proto3" json:"sealedSenderIndicators,omitempty"`
	TypingIndicators       bool                                 `protobuf:"varint,8,opt,name=typingIndicators,proto3" json:"typingIndicators,omitempty"`
	ProxiedLinkPreviews    bool                                 `protobuf:"varint,9,opt,name=proxiedLinkPreviews,proto3" json:"proxiedLinkPreviews,omitempty"`
	NoteToSelfMarkedUnread bool                                 `protobuf:"varint,10,opt,name=noteToSelfMarkedUnread,proto3" json:"noteToSelfMarkedUnread,omitempty"`
	LinkPreviews           bool                                 `protobuf:"varint,11,opt,name=linkPreviews,proto3" json:"linkPreviews,omitempty"`
	PhoneNumberSharingMode AccountRecord_PhoneNumberSharingMode `protobuf:"varint,12,opt,name=phoneNumberSharingMode,proto3,enum=signalservice.AccountRecord_PhoneNumberSharingMode" json:"phoneNumberSharingMode,omitempty"`
	UnlistedPhoneNumber    bool                                 `protobuf:"varint,13,opt,name=unlistedPhoneNumber,proto3" json:"unlistedPhoneNumber,omitempty"`
	PinnedConversations    []*AccountRecord_PinnedConversation  `protobuf:"bytes,14,rep,name=pinnedConversations,proto3" json:"pinnedConversations,omitempty"`
	PreferContactAvatars   bool                                 `protobuf:"varint,15,opt,name=preferContactAvatars,proto3" json:"preferContactAvatars,omitempty"`
	Payments               *Payments                            `protobuf:"bytes,16,opt,name=payments,proto3" json:"payments,omitempty"`
	UniversalExpireTimer   uint32                               `protobuf:"varint,17,opt,name=universalExpireTimer,proto3" json:"universalExpireTimer,omitempty"`
	PrimarySendsSms        bool                                 `protobuf:"varint,18,opt,name=primarySendsSms,proto3" json:"primarySendsSms,omitempty"`
}

func (x *AccountRecord) Reset() {
	*x = AccountRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRecord) ProtoMessage() {}

func (x *AccountRecord) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRecord.ProtoReflect.Descriptor instead.
func (*AccountRecord) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{11}
}

func (x *AccountRecord) GetProfileKey() []byte {
	if x != nil {
		return x.ProfileKey
	}
	return nil
}

func (x *AccountRecord) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *AccountRecord) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *AccountRecord) GetAvatarUrlPath() string {
	if x != nil {
		return x.AvatarUrlPath
	}
	return ""
}

func (x *AccountRecord) GetNoteToSelfArchived() bool {
	if x != nil {
		return x.NoteToSelfArchived
	}
	return false
}

func (x *AccountRecord) GetReadReceipts() bool {
	if x != nil {
		return x.ReadReceipts
	}
	return false
}

func (x *AccountRecord) GetSealedSenderIndicators() bool {
	if x != nil {
		return x.SealedSenderIndicators
	}
	return false
}

func (x *AccountRecord) GetTypingIndicators() bool {
	if x != nil {
		return x.TypingIndicators
	}
	return false
}

func (x *AccountRecord) GetProxiedLinkPreviews() bool {
	if x != nil {
		return x.ProxiedLinkPreviews
	}
	return false
}

func (x *AccountRecord) GetNoteToSelfMarkedUnread() bool {
	if x != nil {
		return x.NoteToSelfMarkedUnread
	}
	return false
}

func (x *AccountRecord) GetLinkPreviews() bool {
	if x != nil {
		return x.LinkPreviews
	}
	return false
}

func (x *AccountRecord) GetPhoneNumberSharingMode() AccountRecord_PhoneNumberSharingMode {
	if x != nil {
		return x.PhoneNumberSharingMode
	}
	return AccountRecord_EVERYBODY
}

func (x *AccountRecord) GetUnlistedPhoneNumber() bool {
	if x != nil {
		return x.UnlistedPhoneNumber
	}
	return false
}

func (x *AccountRecord) GetPinnedConversations() []*AccountRecord_PinnedConversation {
	if x != nil {
		return x.PinnedConversations
	}
	return nil
}

func (x *AccountRecord) GetPreferContactAvatars() bool {
	if x != nil {
		return x.PreferContactAvatars
	}
	return false
}

func (x *AccountRecord) GetPayments() *Payments {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *AccountRecord) GetUniversalExpireTimer() uint32 {
	if x != nil {
		return x.UniversalExpireTimer
	}
	return 0
}

func (x *AccountRecord) GetPrimarySendsSms() bool {
	if x != nil {
		return x.PrimarySendsSms
	}
	return false
}

type ManifestRecord_Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw  []byte                         `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	Type ManifestRecord_Identifier_Type `protobuf:"varint,2,opt,name=type,proto3,enum=signalservice.ManifestRecord_Identifier_Type" json:"type,omitempty"`
}

func (x *ManifestRecord_Identifier) Reset() {
	*x = ManifestRecord_Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManifestRecord_Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestRecord_Identifier) ProtoMessage() {}

func (x *ManifestRecord_Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestRecord_Identifier.ProtoReflect.Descriptor instead.
func (*ManifestRecord_Identifier) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ManifestRecord_Identifier) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *ManifestRecord_Identifier) GetType() ManifestRecord_Identifier_Type {
	if x != nil {
		return x.Type
	}
	return ManifestRecord_Identifier_UNKNOWN
}

type AccountRecord_PinnedConversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//
	//	*AccountRecord_PinnedConversation_Contact_
	//	*AccountRecord_PinnedConversation_LegacyGroupId
	//	*AccountRecord_PinnedConversation_GroupMasterKey
	Identifier isAccountRecord_PinnedConversation_Identifier `protobuf_oneof:"identifier"`
}

func (x *AccountRecord_PinnedConversation) Reset() {
	*x = AccountRecord_PinnedConversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRecord_PinnedConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRecord_PinnedConversation) ProtoMessage() {}

func (x *AccountRecord_PinnedConversation) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRecord_PinnedConversation.ProtoReflect.Descriptor instead.
func (*AccountRecord_PinnedConversation) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{11, 0}
}

func (m *AccountRecord_PinnedConversation) GetIdentifier() isAccountRecord_PinnedConversation_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *AccountRecord_PinnedConversation) GetContact() *AccountRecord_PinnedConversation_Contact {
	if x, ok := x.GetIdentifier().(*AccountRecord_PinnedConversation_Contact_); ok {
		return x.Contact
	}
	return nil
}

func (x *AccountRecord_PinnedConversation) GetLegacyGroupId() []byte {
	if x, ok := x.GetIdentifier().(*AccountRecord_PinnedConversation_LegacyGroupId); ok {
		return x.LegacyGroupId
	}
	return nil
}

func (x *AccountRecord_PinnedConversation) GetGroupMasterKey() []byte {
	if x, ok := x.GetIdentifier().(*AccountRecord_PinnedConversation_GroupMasterKey); ok {
		return x.GroupMasterKey
	}
	return nil
}

type isAccountRecord_PinnedConversation_Identifier interface {
	isAccountRecord_PinnedConversation_Identifier()
}

type AccountRecord_PinnedConversation_Contact_ struct {
	Contact *AccountRecord_PinnedConversation_Contact `protobuf:"bytes,1,opt,name=contact,proto3,oneof"`
}

type AccountRecord_PinnedConversation_LegacyGroupId struct {
	LegacyGroupId []byte `protobuf:"bytes,3,opt,name=legacyGroupId,proto3,oneof"`
}

type AccountRecord_PinnedConversation_GroupMasterKey struct {
	GroupMasterKey []byte `protobuf:"bytes,4,opt,name=groupMasterKey,proto3,oneof"`
}

func (*AccountRecord_PinnedConversation_Contact_) isAccountRecord_PinnedConversation_Identifier() {}

func (*AccountRecord_PinnedConversation_LegacyGroupId) isAccountRecord_PinnedConversation_Identifier() {
}

func (*AccountRecord_PinnedConversation_GroupMasterKey) isAccountRecord_PinnedConversation_Identifier() {
}

type AccountRecord_PinnedConversation_Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	E164 string `protobuf:"bytes,2,opt,name=e164,proto3" json:"e164,omitempty"`
}

func (x *AccountRecord_PinnedConversation_Contact) Reset() {
	*x = AccountRecord_PinnedConversation_Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignalStorage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRecord_PinnedConversation_Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRecord_PinnedConversation_Contact) ProtoMessage() {}

func (x *AccountRecord_PinnedConversation_Contact) ProtoReflect() protoreflect.Message {
	mi := &file_SignalStorage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRecord_PinnedConversation_Contact.ProtoReflect.Descriptor instead.
func (*AccountRecord_PinnedConversation_Contact) Descriptor() ([]byte, []int) {
	return file_SignalStorage_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *AccountRecord_PinnedConversation_Contact) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AccountRecord_PinnedConversation_Contact) GetE164() string {
	if x != nil {
		return x.E164
	}
	return ""
}

var File_SignalStorage_proto protoreflect.FileDescriptor

var file_SignalStorage_proto_rawDesc = []byte{
	0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x41, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40,
	0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x30,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x29, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x22, 0xc2, 0x01, 0x0a, 0x0e,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a,
	0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c,
	0x22, 0xa3, 0x02, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a,
	0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0b, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x1a, 0xaa, 0x01, 0x0a, 0x0a, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x56, 0x31, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x56, 0x32, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x10, 0x04, 0x22, 0x81, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x31, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x31, 0x12, 0x38, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x56, 0x32, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x56, 0x32, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xab, 0x04, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x31, 0x36, 0x34, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x31, 0x36, 0x34,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b,
	0x65, 0x79, 0x12, 0x50, 0x0a, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x64, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x75,
	0x74, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3a, 0x0a, 0x0d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x02, 0x22, 0xcd, 0x01, 0x0a, 0x0d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x56, 0x31, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x13, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xdb, 0x01, 0x0a, 0x0d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x56, 0x32, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x13, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3e, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x22, 0xe9, 0x09, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x76, 0x65,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76,
	0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x55, 0x72, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x12,
	0x6e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x66, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x65, 0x54, 0x6f,
	0x53, 0x65, 0x6c, 0x66, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73,
	0x12, 0x36, 0x0a, 0x16, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x79, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x74, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x64, 0x4c,
	0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x65, 0x54, 0x6f,
	0x53, 0x65, 0x6c, 0x66, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x6e, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x53, 0x65,
	0x6c, 0x66, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x12, 0x6b, 0x0a, 0x16, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x16, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x75, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x75, 0x6e,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x61, 0x0a, 0x13, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x50, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x13, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a,
	0x14, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x65, 0x6e, 0x64,
	0x73, 0x53, 0x6d, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x53, 0x65, 0x6e, 0x64, 0x73, 0x53, 0x6d, 0x73, 0x1a, 0xfc, 0x01, 0x0a, 0x12,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x0d, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x0d, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x1a, 0x31, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x31, 0x36, 0x34,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x31, 0x36, 0x34, 0x42, 0x0c, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x16, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x56, 0x45, 0x52, 0x59, 0x42, 0x4f, 0x44,
	0x59, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x5f,
	0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x42, 0x4f, 0x44, 0x59,
	0x10, 0x02, 0x42, 0x4d, 0x0a, 0x38, 0x6f, 0x72, 0x67, 0x2e, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x50, 0x01,
	0x5a, 0x0f, 0x2e, 0x3b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SignalStorage_proto_rawDescOnce sync.Once
	file_SignalStorage_proto_rawDescData = file_SignalStorage_proto_rawDesc
)

func file_SignalStorage_proto_rawDescGZIP() []byte {
	file_SignalStorage_proto_rawDescOnce.Do(func() {
		file_SignalStorage_proto_rawDescData = protoimpl.X.CompressGZIP(file_SignalStorage_proto_rawDescData)
	})
	return file_SignalStorage_proto_rawDescData
}

var file_SignalStorage_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_SignalStorage_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_SignalStorage_proto_goTypes = []interface{}{
	(ManifestRecord_Identifier_Type)(0),              // 0: signalservice.ManifestRecord.Identifier.Type
	(ContactRecord_IdentityState)(0),                 // 1: signalservice.ContactRecord.IdentityState
	(AccountRecord_PhoneNumberSharingMode)(0),        // 2: signalservice.AccountRecord.PhoneNumberSharingMode
	(*StorageManifest)(nil),                          // 3: signalservice.StorageManifest
	(*StorageItem)(nil),                              // 4: signalservice.StorageItem
	(*StorageItems)(nil),                             // 5: signalservice.StorageItems
	(*ReadOperation)(nil),                            // 6: signalservice.ReadOperation
	(*WriteOperation)(nil),                           // 7: signalservice.WriteOperation
	(*ManifestRecord)(nil),                           // 8: signalservice.ManifestRecord
	(*StorageRecord)(nil),                            // 9: signalservice.StorageRecord
	(*ContactRecord)(nil),                            // 10: signalservice.ContactRecord
	(*GroupV1Record)(nil),                            // 11: signalservice.GroupV1Record
	(*GroupV2Record)(nil),                            // 12: signalservice.GroupV2Record
	(*Payments)(nil),                                 // 13: signalservice.Payments
	(*AccountRecord)(nil),                            // 14: signalservice.AccountRecord
	(*ManifestRecord_Identifier)(nil),                // 15: signalservice.ManifestRecord.Identifier
	(*AccountRecord_PinnedConversation)(nil),         // 16: signalservice.AccountRecord.PinnedConversation
	(*AccountRecord_PinnedConversation_Contact)(nil), // 17: signalservice.AccountRecord.PinnedConversation.Contact
}
var file_SignalStorage_proto_depIdxs = []int32{
	4,  // 0: signalservice.StorageItems.items:type_name -> signalservice.StorageItem
	3,  // 1: signalservice.WriteOperation.manifest:type_name -> signalservice.StorageManifest
	4,  // 2: signalservice.WriteOperation.insertItem:type_name -> signalservice.StorageItem
	15, // 3: signalservice.ManifestRecord.identifiers:type_name -> signalservice.ManifestRecord.Identifier
	10, // 4: signalservice.StorageRecord.contact:type_name -> signalservice.ContactRecord
	11, // 5: signalservice.StorageRecord.groupV1:type_name -> signalservice.GroupV1Record
	12, // 6: signalservice.StorageRecord.groupV2:type_name -> signalservice.GroupV2Record
	14, // 7: signalservice.StorageRecord.account:type_name -> signalservice.AccountRecord
	1,  // 8: signalservice.ContactRecord.identityState:type_name -> signalservice.ContactRecord.IdentityState
	2,  // 9: signalservice.AccountRecord.phoneNumberSharingMode:type_name -> signalservice.AccountRecord.PhoneNumberSharingMode
	16, // 10: signalservice.AccountRecord.pinnedConversations:type_name -> signalservice.AccountRecord.PinnedConversation
	13, // 11: signalservice.AccountRecord.payments:type_name -> signalservice.Payments
	0,  // 12: signalservice.ManifestRecord.Identifier.type:type_name -> signalservice.ManifestRecord.Identifier.Type
	17, // 13: signalservice.AccountRecord.PinnedConversation.contact:type_name -> signalservice.AccountRecord.PinnedConversation.Contact
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_SignalStorage_proto_init() }
func file_SignalStorage_proto_init() {
	if File_SignalStorage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SignalStorage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManifestRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupV1Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupV2Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManifestRecord_Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRecord_PinnedConversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignalStorage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRecord_PinnedConversation_Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_SignalStorage_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*StorageRecord_Contact)(nil),
		(*StorageRecord_GroupV1)(nil),
		(*StorageRecord_GroupV2)(nil),
		(*StorageRecord_Account)(nil),
	}
	file_SignalStorage_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*AccountRecord_PinnedConversation_Contact_)(nil),
		(*AccountRecord_PinnedConversation_LegacyGroupId)(nil),
		(*AccountRecord_PinnedConversation_GroupMasterKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SignalStorage_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_SignalStorage_proto_goTypes,
		DependencyIndexes: file_SignalStorage_proto_depIdxs,
		EnumInfos:         file_SignalStorage_proto_enumTypes,
		MessageInfos:      file_SignalStorage_proto_msgTypes,
	}.Build()
	File_SignalStorage_proto = out.File
	file_SignalStorage_proto_rawDesc = nil
	file_SignalStorage_proto_goTypes = nil
	file_SignalStorage_proto_depIdxs = nil
}
